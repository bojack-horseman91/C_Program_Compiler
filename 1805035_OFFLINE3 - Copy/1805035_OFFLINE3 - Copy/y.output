Terminals unused in grammar

    DO
    CHAR
    DOUBLE
    CONTINUE
    CONST_CHAR


Grammar

    0 $accept: start $end

    1 $@1: %empty

    2 start: $@1 program
    3      | Unrecognized
    4      | error

    5 program: program unit
    6        | unit

    7 unit: var_declaration
    8     | func_declaration
    9     | func_definition

   10 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
   11                 | type_specifier ID LPAREN RPAREN SEMICOLON

   12 func_definition: type_specifier ID LPAREN parameter_list error RPAREN compound_statement

   13 $@2: %empty

   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@2 compound_statement

   15 $@3: %empty

   16 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement

   17 parameter_list: parameter_list COMMA type_specifier ID
   18               | parameter_list COMMA type_specifier
   19               | type_specifier ID
   20               | type_specifier

   21 $@4: %empty

   22 compound_statement: LCURL $@4 statements RCURL

   23 $@5: %empty

   24 compound_statement: LCURL $@5 RCURL

   25 var_declaration: type_specifier declaration_list SEMICOLON

   26 type_specifier: INT
   27               | FLOAT
   28               | VOID

   29 declaration_list: declaration_list COMMA ID
   30                 | declaration_list error COMMA ID
   31                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   32                 | ID
   33                 | ID LTHIRD CONST_INT RTHIRD

   34 statements: statement
   35           | statements statement

   36 statement: var_declaration
   37          | expression_statement
   38          | compound_statement

   39 $@6: %empty

   40 $@7: %empty

   41 $@8: %empty

   42 statement: FOR LPAREN expression_statement $@6 expression_statement $@7 expression RPAREN $@8 statement
   43          | CONDITIONAL_STATEMENT RPAREN statement

   44 $@9: %empty

   45 statement: CONDITIONAL_STATEMENT RPAREN statement ELSE $@9 statement

   46 $@10: %empty

   47 $@11: %empty

   48 statement: WHILE $@10 LPAREN expression $@11 RPAREN statement
   49          | PRINTLN LPAREN ID RPAREN SEMICOLON
   50          | RETURN expression SEMICOLON
   51          | error

   52 CONDITIONAL_STATEMENT: IF LPAREN expression

   53 expression_statement: SEMICOLON
   54                     | expression SEMICOLON

   55 variable: ID
   56         | ID LTHIRD expression RTHIRD

   57 expression: logic_expression

   58 $@12: %empty

   59 expression: variable $@12 ASSIGNOP logic_expression

   60 logic_expression: rel_expression

   61 $@13: %empty

   62 logic_expression: rel_expression $@13 LOGICOP rel_expression

   63 rel_expression: simple_expression

   64 $@14: %empty

   65 rel_expression: simple_expression $@14 RELOP simple_expression

   66 simple_expression: term

   67 $@15: %empty

   68 simple_expression: simple_expression $@15 ADDOP term

   69 term: unary_expression

   70 $@16: %empty

   71 term: term $@16 MULOP unary_expression

   72 unary_expression: ADDOP unary_expression
   73                 | NOT unary_expression
   74                 | factor

   75 factor: variable
   76       | ID LPAREN argument_list RPAREN
   77       | LPAREN expression RPAREN
   78       | CONST_INT
   79       | CONST_FLOAT
   80       | variable INCOP
   81       | variable DECOP

   82 argument_list: arguments
   83              | %empty

   84 arguments: arguments COMMA logic_expression
   85          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4 12 30 51
    IF <symbol_val> (258) 52
    ELSE <symbol_val> (259) 45
    FOR <symbol_val> (260) 42
    DO <symbol_val> (261)
    NOT <symbol_val> (262) 73
    FLOAT <symbol_val> (263) 27
    INT <symbol_val> (264) 26
    VOID <symbol_val> (265) 28
    CHAR <symbol_val> (266)
    DOUBLE <symbol_val> (267)
    WHILE <symbol_val> (268) 48
    RETURN <symbol_val> (269) 50
    CONTINUE <symbol_val> (270)
    LPAREN <symbol_val> (271) 10 11 12 14 16 42 48 49 52 76 77
    RPAREN <symbol_val> (272) 10 11 12 14 16 42 43 45 48 49 76 77
    LCURL <symbol_val> (273) 22 24
    RCURL <symbol_val> (274) 22 24
    COMMA <symbol_val> (275) 17 18 29 30 31 84
    SEMICOLON <symbol_val> (276) 10 11 25 49 50 53 54
    LTHIRD <symbol_val> (277) 31 33 56
    RTHIRD <symbol_val> (278) 31 33 56
    PRINTLN <symbol_val> (279) 49
    CONST_INT <symbol_val> (280) 31 33 78
    CONST_FLOAT <symbol_val> (281) 79
    CONST_CHAR <char_val> (282)
    ID <symbol_val> (283) 10 11 12 14 16 17 19 29 30 31 32 33 49 55 56 76
    INCOP <symbol_val> (284) 80
    DECOP <symbol_val> (285) 81
    ADDOP <symbol_val> (286) 68 72
    MULOP <symbol_val> (287) 71
    RELOP <symbol_val> (288) 65
    LOGICOP <symbol_val> (289) 62
    ASSIGNOP <symbol_val> (290) 59
    LOWER_THAN_ELSE (291)
    Unrecognized (292) 3


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    start <symbol_val> (39)
        on left: 2 3 4
        on right: 0
    $@1 (40)
        on left: 1
        on right: 2
    program <symbol_val> (41)
        on left: 5 6
        on right: 2 5
    unit <symbol_val> (42)
        on left: 7 8 9
        on right: 5 6
    func_declaration <symbol_val> (43)
        on left: 10 11
        on right: 8
    func_definition <symbol_val> (44)
        on left: 12 14 16
        on right: 9
    $@2 (45)
        on left: 13
        on right: 14
    $@3 (46)
        on left: 15
        on right: 16
    parameter_list <symbol_val> (47)
        on left: 17 18 19 20
        on right: 10 12 14 17 18
    compound_statement <symbol_val> (48)
        on left: 22 24
        on right: 12 14 16 38
    $@4 (49)
        on left: 21
        on right: 22
    $@5 (50)
        on left: 23
        on right: 24
    var_declaration <symbol_val> (51)
        on left: 25
        on right: 7 36
    type_specifier <symbol_val> (52)
        on left: 26 27 28
        on right: 10 11 12 14 16 17 18 19 20 25
    declaration_list <symbol_val> (53)
        on left: 29 30 31 32 33
        on right: 25 29 30 31
    statements <symbol_val> (54)
        on left: 34 35
        on right: 22 35
    statement <symbol_val> (55)
        on left: 36 37 38 42 43 45 48 49 50 51
        on right: 34 35 42 43 45 48
    $@6 (56)
        on left: 39
        on right: 42
    $@7 (57)
        on left: 40
        on right: 42
    $@8 (58)
        on left: 41
        on right: 42
    $@9 (59)
        on left: 44
        on right: 45
    $@10 (60)
        on left: 46
        on right: 48
    $@11 (61)
        on left: 47
        on right: 48
    CONDITIONAL_STATEMENT <symbol_val> (62)
        on left: 52
        on right: 43 45
    expression_statement <symbol_val> (63)
        on left: 53 54
        on right: 37 42
    variable <symbol_val> (64)
        on left: 55 56
        on right: 59 75 80 81
    expression <symbol_val> (65)
        on left: 57 59
        on right: 42 48 50 52 54 56 77
    $@12 (66)
        on left: 58
        on right: 59
    logic_expression <symbol_val> (67)
        on left: 60 62
        on right: 57 59 84 85
    $@13 (68)
        on left: 61
        on right: 62
    rel_expression <symbol_val> (69)
        on left: 63 65
        on right: 60 62
    $@14 (70)
        on left: 64
        on right: 65
    simple_expression <symbol_val> (71)
        on left: 66 68
        on right: 63 65 68
    $@15 (72)
        on left: 67
        on right: 68
    term <symbol_val> (73)
        on left: 69 71
        on right: 66 68 71
    $@16 (74)
        on left: 70
        on right: 71
    unary_expression <symbol_val> (75)
        on left: 72 73 74
        on right: 69 71 72 73
    factor <symbol_val> (76)
        on left: 75 76 77 78 79 80 81
        on right: 74
    argument_list <symbol_val> (77)
        on left: 82 83
        on right: 76
    arguments <symbol_val> (78)
        on left: 84 85
        on right: 82 84


State 0

    0 $accept: . start $end

    error         shift, and go to state 1
    Unrecognized  shift, and go to state 2

    FLOAT  reduce using rule 1 ($@1)
    INT    reduce using rule 1 ($@1)
    VOID   reduce using rule 1 ($@1)

    start  go to state 3
    $@1    go to state 4


State 1

    4 start: error .

    $default  reduce using rule 4 (start)


State 2

    3 start: Unrecognized .

    $default  reduce using rule 3 (start)


State 3

    0 $accept: start . $end

    $end  shift, and go to state 5


State 4

    2 start: $@1 . program

    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8

    program           go to state 9
    unit              go to state 10
    func_declaration  go to state 11
    func_definition   go to state 12
    var_declaration   go to state 13
    type_specifier    go to state 14


State 5

    0 $accept: start $end .

    $default  accept


State 6

   27 type_specifier: FLOAT .

    $default  reduce using rule 27 (type_specifier)


State 7

   26 type_specifier: INT .

    $default  reduce using rule 26 (type_specifier)


State 8

   28 type_specifier: VOID .

    $default  reduce using rule 28 (type_specifier)


State 9

    2 start: $@1 program .
    5 program: program . unit

    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8

    $default  reduce using rule 2 (start)

    unit              go to state 15
    func_declaration  go to state 11
    func_definition   go to state 12
    var_declaration   go to state 13
    type_specifier    go to state 14


State 10

    6 program: unit .

    $default  reduce using rule 6 (program)


State 11

    8 unit: func_declaration .

    $default  reduce using rule 8 (unit)


State 12

    9 unit: func_definition .

    $default  reduce using rule 9 (unit)


State 13

    7 unit: var_declaration .

    $default  reduce using rule 7 (unit)


State 14

   10 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
   11                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   12 func_definition: type_specifier . ID LPAREN parameter_list error RPAREN compound_statement
   14                | type_specifier . ID LPAREN parameter_list RPAREN $@2 compound_statement
   16                | type_specifier . ID LPAREN RPAREN $@3 compound_statement
   25 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 16

    declaration_list  go to state 17


State 15

    5 program: program unit .

    $default  reduce using rule 5 (program)


State 16

   10 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
   11                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   12 func_definition: type_specifier ID . LPAREN parameter_list error RPAREN compound_statement
   14                | type_specifier ID . LPAREN parameter_list RPAREN $@2 compound_statement
   16                | type_specifier ID . LPAREN RPAREN $@3 compound_statement
   32 declaration_list: ID .
   33                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 18
    LTHIRD  shift, and go to state 19

    $default  reduce using rule 32 (declaration_list)


State 17

   25 var_declaration: type_specifier declaration_list . SEMICOLON
   29 declaration_list: declaration_list . COMMA ID
   30                 | declaration_list . error COMMA ID
   31                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    error      shift, and go to state 20
    COMMA      shift, and go to state 21
    SEMICOLON  shift, and go to state 22


State 18

   10 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
   11                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   12 func_definition: type_specifier ID LPAREN . parameter_list error RPAREN compound_statement
   14                | type_specifier ID LPAREN . parameter_list RPAREN $@2 compound_statement
   16                | type_specifier ID LPAREN . RPAREN $@3 compound_statement

    FLOAT   shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    RPAREN  shift, and go to state 23

    parameter_list  go to state 24
    type_specifier  go to state 25


State 19

   33 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 26


State 20

   30 declaration_list: declaration_list error . COMMA ID

    COMMA  shift, and go to state 27


State 21

   29 declaration_list: declaration_list COMMA . ID
   31                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 28


State 22

   25 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 25 (var_declaration)


State 23

   11 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   16 func_definition: type_specifier ID LPAREN RPAREN . $@3 compound_statement

    SEMICOLON  shift, and go to state 29

    $default  reduce using rule 15 ($@3)

    $@3  go to state 30


State 24

   10 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   12 func_definition: type_specifier ID LPAREN parameter_list . error RPAREN compound_statement
   14                | type_specifier ID LPAREN parameter_list . RPAREN $@2 compound_statement
   17 parameter_list: parameter_list . COMMA type_specifier ID
   18               | parameter_list . COMMA type_specifier

    error   shift, and go to state 31
    RPAREN  shift, and go to state 32
    COMMA   shift, and go to state 33


State 25

   19 parameter_list: type_specifier . ID
   20               | type_specifier .

    ID  shift, and go to state 34

    $default  reduce using rule 20 (parameter_list)


State 26

   33 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 35


State 27

   30 declaration_list: declaration_list error COMMA . ID

    ID  shift, and go to state 36


State 28

   29 declaration_list: declaration_list COMMA ID .
   31                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 37

    $default  reduce using rule 29 (declaration_list)


State 29

   11 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 11 (func_declaration)


State 30

   16 func_definition: type_specifier ID LPAREN RPAREN $@3 . compound_statement

    LCURL  shift, and go to state 38

    compound_statement  go to state 39


State 31

   12 func_definition: type_specifier ID LPAREN parameter_list error . RPAREN compound_statement

    RPAREN  shift, and go to state 40


State 32

   10 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@2 compound_statement

    SEMICOLON  shift, and go to state 41

    $default  reduce using rule 13 ($@2)

    $@2  go to state 42


State 33

   17 parameter_list: parameter_list COMMA . type_specifier ID
   18               | parameter_list COMMA . type_specifier

    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8

    type_specifier  go to state 43


State 34

   19 parameter_list: type_specifier ID .

    $default  reduce using rule 19 (parameter_list)


State 35

   33 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 33 (declaration_list)


State 36

   30 declaration_list: declaration_list error COMMA ID .

    $default  reduce using rule 30 (declaration_list)


State 37

   31 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 44


State 38

   22 compound_statement: LCURL . $@4 statements RCURL
   24                   | LCURL . $@5 RCURL

    RCURL     reduce using rule 23 ($@5)
    $default  reduce using rule 21 ($@4)

    $@4  go to state 45
    $@5  go to state 46


State 39

   16 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement .

    $default  reduce using rule 16 (func_definition)


State 40

   12 func_definition: type_specifier ID LPAREN parameter_list error RPAREN . compound_statement

    LCURL  shift, and go to state 38

    compound_statement  go to state 47


State 41

   10 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 10 (func_declaration)


State 42

   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 38

    compound_statement  go to state 48


State 43

   17 parameter_list: parameter_list COMMA type_specifier . ID
   18               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 49

    $default  reduce using rule 18 (parameter_list)


State 44

   31 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 50


State 45

   22 compound_statement: LCURL $@4 . statements RCURL

    error        shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    NOT          shift, and go to state 54
    FLOAT        shift, and go to state 6
    INT          shift, and go to state 7
    VOID         shift, and go to state 8
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    LPAREN       shift, and go to state 57
    LCURL        shift, and go to state 38
    SEMICOLON    shift, and go to state 58
    PRINTLN      shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    compound_statement     go to state 64
    var_declaration        go to state 65
    type_specifier         go to state 66
    statements             go to state 67
    statement              go to state 68
    CONDITIONAL_STATEMENT  go to state 69
    expression_statement   go to state 70
    variable               go to state 71
    expression             go to state 72
    logic_expression       go to state 73
    rel_expression         go to state 74
    simple_expression      go to state 75
    term                   go to state 76
    unary_expression       go to state 77
    factor                 go to state 78


State 46

   24 compound_statement: LCURL $@5 . RCURL

    RCURL  shift, and go to state 79


State 47

   12 func_definition: type_specifier ID LPAREN parameter_list error RPAREN compound_statement .

    $default  reduce using rule 12 (func_definition)


State 48

   14 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@2 compound_statement .

    $default  reduce using rule 14 (func_definition)


State 49

   17 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 17 (parameter_list)


State 50

   31 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 31 (declaration_list)


State 51

   51 statement: error .

    $default  reduce using rule 51 (statement)


State 52

   52 CONDITIONAL_STATEMENT: IF . LPAREN expression

    LPAREN  shift, and go to state 80


State 53

   42 statement: FOR . LPAREN expression_statement $@6 expression_statement $@7 expression RPAREN $@8 statement

    LPAREN  shift, and go to state 81


State 54

   73 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable          go to state 82
    unary_expression  go to state 83
    factor            go to state 78


State 55

   48 statement: WHILE . $@10 LPAREN expression $@11 RPAREN statement

    $default  reduce using rule 46 ($@10)

    $@10  go to state 84


State 56

   50 statement: RETURN . expression SEMICOLON

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 71
    expression         go to state 85
    logic_expression   go to state 73
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 57

   77 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 71
    expression         go to state 86
    logic_expression   go to state 73
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 58

   53 expression_statement: SEMICOLON .

    $default  reduce using rule 53 (expression_statement)


State 59

   49 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 87


State 60

   78 factor: CONST_INT .

    $default  reduce using rule 78 (factor)


State 61

   79 factor: CONST_FLOAT .

    $default  reduce using rule 79 (factor)


State 62

   55 variable: ID .
   56         | ID . LTHIRD expression RTHIRD
   76 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 88
    LTHIRD  shift, and go to state 89

    $default  reduce using rule 55 (variable)


State 63

   72 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable          go to state 82
    unary_expression  go to state 90
    factor            go to state 78


State 64

   38 statement: compound_statement .

    $default  reduce using rule 38 (statement)


State 65

   36 statement: var_declaration .

    $default  reduce using rule 36 (statement)


State 66

   25 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 91

    declaration_list  go to state 17


State 67

   22 compound_statement: LCURL $@4 statements . RCURL
   35 statements: statements . statement

    error        shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    NOT          shift, and go to state 54
    FLOAT        shift, and go to state 6
    INT          shift, and go to state 7
    VOID         shift, and go to state 8
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    LPAREN       shift, and go to state 57
    LCURL        shift, and go to state 38
    RCURL        shift, and go to state 92
    SEMICOLON    shift, and go to state 58
    PRINTLN      shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    compound_statement     go to state 64
    var_declaration        go to state 65
    type_specifier         go to state 66
    statement              go to state 93
    CONDITIONAL_STATEMENT  go to state 69
    expression_statement   go to state 70
    variable               go to state 71
    expression             go to state 72
    logic_expression       go to state 73
    rel_expression         go to state 74
    simple_expression      go to state 75
    term                   go to state 76
    unary_expression       go to state 77
    factor                 go to state 78


State 68

   34 statements: statement .

    $default  reduce using rule 34 (statements)


State 69

   43 statement: CONDITIONAL_STATEMENT . RPAREN statement
   45          | CONDITIONAL_STATEMENT . RPAREN statement ELSE $@9 statement

    RPAREN  shift, and go to state 94


State 70

   37 statement: expression_statement .

    $default  reduce using rule 37 (statement)


State 71

   59 expression: variable . $@12 ASSIGNOP logic_expression
   75 factor: variable .
   80       | variable . INCOP
   81       | variable . DECOP

    INCOP  shift, and go to state 95
    DECOP  shift, and go to state 96

    ASSIGNOP  reduce using rule 58 ($@12)
    $default  reduce using rule 75 (factor)

    $@12  go to state 97


State 72

   54 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 73

   57 expression: logic_expression .

    $default  reduce using rule 57 (expression)


State 74

   60 logic_expression: rel_expression .
   62                 | rel_expression . $@13 LOGICOP rel_expression

    LOGICOP   reduce using rule 61 ($@13)
    $default  reduce using rule 60 (logic_expression)

    $@13  go to state 99


State 75

   63 rel_expression: simple_expression .
   65               | simple_expression . $@14 RELOP simple_expression
   68 simple_expression: simple_expression . $@15 ADDOP term

    ADDOP     reduce using rule 67 ($@15)
    RELOP     reduce using rule 64 ($@14)
    $default  reduce using rule 63 (rel_expression)

    $@14  go to state 100
    $@15  go to state 101


State 76

   66 simple_expression: term .
   71 term: term . $@16 MULOP unary_expression

    MULOP     reduce using rule 70 ($@16)
    $default  reduce using rule 66 (simple_expression)

    $@16  go to state 102


State 77

   69 term: unary_expression .

    $default  reduce using rule 69 (term)


State 78

   74 unary_expression: factor .

    $default  reduce using rule 74 (unary_expression)


State 79

   24 compound_statement: LCURL $@5 RCURL .

    $default  reduce using rule 24 (compound_statement)


State 80

   52 CONDITIONAL_STATEMENT: IF LPAREN . expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 71
    expression         go to state 103
    logic_expression   go to state 73
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 81

   42 statement: FOR LPAREN . expression_statement $@6 expression_statement $@7 expression RPAREN $@8 statement

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    SEMICOLON    shift, and go to state 58
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    expression_statement  go to state 104
    variable              go to state 71
    expression            go to state 72
    logic_expression      go to state 73
    rel_expression        go to state 74
    simple_expression     go to state 75
    term                  go to state 76
    unary_expression      go to state 77
    factor                go to state 78


State 82

   75 factor: variable .
   80       | variable . INCOP
   81       | variable . DECOP

    INCOP  shift, and go to state 95
    DECOP  shift, and go to state 96

    $default  reduce using rule 75 (factor)


State 83

   73 unary_expression: NOT unary_expression .

    $default  reduce using rule 73 (unary_expression)


State 84

   48 statement: WHILE $@10 . LPAREN expression $@11 RPAREN statement

    LPAREN  shift, and go to state 105


State 85

   50 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 86

   77 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 107


State 87

   49 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 108


State 88

   76 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    $default  reduce using rule 83 (argument_list)

    variable           go to state 82
    logic_expression   go to state 109
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78
    argument_list      go to state 110
    arguments          go to state 111


State 89

   56 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 71
    expression         go to state 112
    logic_expression   go to state 73
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 90

   72 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 72 (unary_expression)


State 91

   32 declaration_list: ID .
   33                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 19

    $default  reduce using rule 32 (declaration_list)


State 92

   22 compound_statement: LCURL $@4 statements RCURL .

    $default  reduce using rule 22 (compound_statement)


State 93

   35 statements: statements statement .

    $default  reduce using rule 35 (statements)


State 94

   43 statement: CONDITIONAL_STATEMENT RPAREN . statement
   45          | CONDITIONAL_STATEMENT RPAREN . statement ELSE $@9 statement

    error        shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    NOT          shift, and go to state 54
    FLOAT        shift, and go to state 6
    INT          shift, and go to state 7
    VOID         shift, and go to state 8
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    LPAREN       shift, and go to state 57
    LCURL        shift, and go to state 38
    SEMICOLON    shift, and go to state 58
    PRINTLN      shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    compound_statement     go to state 64
    var_declaration        go to state 65
    type_specifier         go to state 66
    statement              go to state 113
    CONDITIONAL_STATEMENT  go to state 69
    expression_statement   go to state 70
    variable               go to state 71
    expression             go to state 72
    logic_expression       go to state 73
    rel_expression         go to state 74
    simple_expression      go to state 75
    term                   go to state 76
    unary_expression       go to state 77
    factor                 go to state 78


State 95

   80 factor: variable INCOP .

    $default  reduce using rule 80 (factor)


State 96

   81 factor: variable DECOP .

    $default  reduce using rule 81 (factor)


State 97

   59 expression: variable $@12 . ASSIGNOP logic_expression

    ASSIGNOP  shift, and go to state 114


State 98

   54 expression_statement: expression SEMICOLON .

    $default  reduce using rule 54 (expression_statement)


State 99

   62 logic_expression: rel_expression $@13 . LOGICOP rel_expression

    LOGICOP  shift, and go to state 115


State 100

   65 rel_expression: simple_expression $@14 . RELOP simple_expression

    RELOP  shift, and go to state 116


State 101

   68 simple_expression: simple_expression $@15 . ADDOP term

    ADDOP  shift, and go to state 117


State 102

   71 term: term $@16 . MULOP unary_expression

    MULOP  shift, and go to state 118


State 103

   52 CONDITIONAL_STATEMENT: IF LPAREN expression .

    $default  reduce using rule 52 (CONDITIONAL_STATEMENT)


State 104

   42 statement: FOR LPAREN expression_statement . $@6 expression_statement $@7 expression RPAREN $@8 statement

    $default  reduce using rule 39 ($@6)

    $@6  go to state 119


State 105

   48 statement: WHILE $@10 LPAREN . expression $@11 RPAREN statement

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 71
    expression         go to state 120
    logic_expression   go to state 73
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 106

   50 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 50 (statement)


State 107

   77 factor: LPAREN expression RPAREN .

    $default  reduce using rule 77 (factor)


State 108

   49 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 121


State 109

   85 arguments: logic_expression .

    $default  reduce using rule 85 (arguments)


State 110

   76 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 122


State 111

   82 argument_list: arguments .
   84 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 123

    $default  reduce using rule 82 (argument_list)


State 112

   56 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 124


State 113

   43 statement: CONDITIONAL_STATEMENT RPAREN statement .
   45          | CONDITIONAL_STATEMENT RPAREN statement . ELSE $@9 statement

    ELSE  shift, and go to state 125

    $default  reduce using rule 43 (statement)


State 114

   59 expression: variable $@12 ASSIGNOP . logic_expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 82
    logic_expression   go to state 126
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 115

   62 logic_expression: rel_expression $@13 LOGICOP . rel_expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 82
    rel_expression     go to state 127
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 116

   65 rel_expression: simple_expression $@14 RELOP . simple_expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 82
    simple_expression  go to state 128
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 117

   68 simple_expression: simple_expression $@15 ADDOP . term

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable          go to state 82
    term              go to state 129
    unary_expression  go to state 77
    factor            go to state 78


State 118

   71 term: term $@16 MULOP . unary_expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable          go to state 82
    unary_expression  go to state 130
    factor            go to state 78


State 119

   42 statement: FOR LPAREN expression_statement $@6 . expression_statement $@7 expression RPAREN $@8 statement

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    SEMICOLON    shift, and go to state 58
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    expression_statement  go to state 131
    variable              go to state 71
    expression            go to state 72
    logic_expression      go to state 73
    rel_expression        go to state 74
    simple_expression     go to state 75
    term                  go to state 76
    unary_expression      go to state 77
    factor                go to state 78


State 120

   48 statement: WHILE $@10 LPAREN expression . $@11 RPAREN statement

    $default  reduce using rule 47 ($@11)

    $@11  go to state 132


State 121

   49 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 133


State 122

   76 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 76 (factor)


State 123

   84 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 82
    logic_expression   go to state 134
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 124

   56 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 56 (variable)


State 125

   45 statement: CONDITIONAL_STATEMENT RPAREN statement ELSE . $@9 statement

    $default  reduce using rule 44 ($@9)

    $@9  go to state 135


State 126

   59 expression: variable $@12 ASSIGNOP logic_expression .

    $default  reduce using rule 59 (expression)


State 127

   62 logic_expression: rel_expression $@13 LOGICOP rel_expression .

    $default  reduce using rule 62 (logic_expression)


State 128

   65 rel_expression: simple_expression $@14 RELOP simple_expression .
   68 simple_expression: simple_expression . $@15 ADDOP term

    ADDOP     reduce using rule 67 ($@15)
    $default  reduce using rule 65 (rel_expression)

    $@15  go to state 101


State 129

   68 simple_expression: simple_expression $@15 ADDOP term .
   71 term: term . $@16 MULOP unary_expression

    MULOP     reduce using rule 70 ($@16)
    $default  reduce using rule 68 (simple_expression)

    $@16  go to state 102


State 130

   71 term: term $@16 MULOP unary_expression .

    $default  reduce using rule 71 (term)


State 131

   42 statement: FOR LPAREN expression_statement $@6 expression_statement . $@7 expression RPAREN $@8 statement

    $default  reduce using rule 40 ($@7)

    $@7  go to state 136


State 132

   48 statement: WHILE $@10 LPAREN expression $@11 . RPAREN statement

    RPAREN  shift, and go to state 137


State 133

   49 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 49 (statement)


State 134

   84 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 84 (arguments)


State 135

   45 statement: CONDITIONAL_STATEMENT RPAREN statement ELSE $@9 . statement

    error        shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    NOT          shift, and go to state 54
    FLOAT        shift, and go to state 6
    INT          shift, and go to state 7
    VOID         shift, and go to state 8
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    LPAREN       shift, and go to state 57
    LCURL        shift, and go to state 38
    SEMICOLON    shift, and go to state 58
    PRINTLN      shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    compound_statement     go to state 64
    var_declaration        go to state 65
    type_specifier         go to state 66
    statement              go to state 138
    CONDITIONAL_STATEMENT  go to state 69
    expression_statement   go to state 70
    variable               go to state 71
    expression             go to state 72
    logic_expression       go to state 73
    rel_expression         go to state 74
    simple_expression      go to state 75
    term                   go to state 76
    unary_expression       go to state 77
    factor                 go to state 78


State 136

   42 statement: FOR LPAREN expression_statement $@6 expression_statement $@7 . expression RPAREN $@8 statement

    NOT          shift, and go to state 54
    LPAREN       shift, and go to state 57
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    variable           go to state 71
    expression         go to state 139
    logic_expression   go to state 73
    rel_expression     go to state 74
    simple_expression  go to state 75
    term               go to state 76
    unary_expression   go to state 77
    factor             go to state 78


State 137

   48 statement: WHILE $@10 LPAREN expression $@11 RPAREN . statement

    error        shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    NOT          shift, and go to state 54
    FLOAT        shift, and go to state 6
    INT          shift, and go to state 7
    VOID         shift, and go to state 8
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    LPAREN       shift, and go to state 57
    LCURL        shift, and go to state 38
    SEMICOLON    shift, and go to state 58
    PRINTLN      shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    compound_statement     go to state 64
    var_declaration        go to state 65
    type_specifier         go to state 66
    statement              go to state 140
    CONDITIONAL_STATEMENT  go to state 69
    expression_statement   go to state 70
    variable               go to state 71
    expression             go to state 72
    logic_expression       go to state 73
    rel_expression         go to state 74
    simple_expression      go to state 75
    term                   go to state 76
    unary_expression       go to state 77
    factor                 go to state 78


State 138

   45 statement: CONDITIONAL_STATEMENT RPAREN statement ELSE $@9 statement .

    $default  reduce using rule 45 (statement)


State 139

   42 statement: FOR LPAREN expression_statement $@6 expression_statement $@7 expression . RPAREN $@8 statement

    RPAREN  shift, and go to state 141


State 140

   48 statement: WHILE $@10 LPAREN expression $@11 RPAREN statement .

    $default  reduce using rule 48 (statement)


State 141

   42 statement: FOR LPAREN expression_statement $@6 expression_statement $@7 expression RPAREN . $@8 statement

    $default  reduce using rule 41 ($@8)

    $@8  go to state 142


State 142

   42 statement: FOR LPAREN expression_statement $@6 expression_statement $@7 expression RPAREN $@8 . statement

    error        shift, and go to state 51
    IF           shift, and go to state 52
    FOR          shift, and go to state 53
    NOT          shift, and go to state 54
    FLOAT        shift, and go to state 6
    INT          shift, and go to state 7
    VOID         shift, and go to state 8
    WHILE        shift, and go to state 55
    RETURN       shift, and go to state 56
    LPAREN       shift, and go to state 57
    LCURL        shift, and go to state 38
    SEMICOLON    shift, and go to state 58
    PRINTLN      shift, and go to state 59
    CONST_INT    shift, and go to state 60
    CONST_FLOAT  shift, and go to state 61
    ID           shift, and go to state 62
    ADDOP        shift, and go to state 63

    compound_statement     go to state 64
    var_declaration        go to state 65
    type_specifier         go to state 66
    statement              go to state 143
    CONDITIONAL_STATEMENT  go to state 69
    expression_statement   go to state 70
    variable               go to state 71
    expression             go to state 72
    logic_expression       go to state 73
    rel_expression         go to state 74
    simple_expression      go to state 75
    term                   go to state 76
    unary_expression       go to state 77
    factor                 go to state 78


State 143

   42 statement: FOR LPAREN expression_statement $@6 expression_statement $@7 expression RPAREN $@8 statement .

    $default  reduce using rule 42 (statement)
